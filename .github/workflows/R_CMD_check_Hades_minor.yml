#Designed to be a fast github actions check - longer running actions to only run on releases
on:
  pull_request:
    branches:
      - '**'

name: R-CMD-check-minor

jobs:
  R-CMD-check-minor:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}  # Does not appear to have Java 32-bit, hence the --no-multiarch
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      CDM5_POSTGRESQL_CDM_SCHEMA: eunomia
      CDM5_POSTGRESQL_OHDSI_SCHEMA: ${{ secrets.CDM5_POSTGRESQL_OHDSI_SCHEMA }}
      CDM5_POSTGRESQL_PASSWORD: ${{ secrets.CDM5_POSTGRESQL_PASSWORD }}
      CDM5_POSTGRESQL_SERVER: ${{ secrets.CDM5_POSTGRESQL_SERVER }}
      CDM5_POSTGRESQL_USER: ${{ secrets.CDM5_POSTGRESQL_USER }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-tinytex@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libssh-dev
          Rscript -e 'install.packages("remotes")'
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran")'
          error-on: '"warning"'
          check-dir: '"check"'

      - name: Upload source package
        if: success() && runner.os == 'macOS' && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: package_tarball
          path: check/*.tar.gz

      - name: Install covr
        if: runner.os == 'macOS'
        run: |
          install.packages("covr")
        shell: Rscript {0}

      - name: Test coverage
        if: runner.os == 'macOS'
        run: covr::codecov()
        shell: Rscript {0}